import org.neuroph.core.NeuralNetwork;
import org.neuroph.core.data.DataSet;
import org.neuroph.core.data.DataSetRow;
import org.neuroph.nnet.MultiLayerPerceptron;
import org.neuroph.nnet.learning.BackPropagation;
import org.neuroph.util.TransferFunctionType;

import java.text.DecimalFormat;

public class Net {

    public static void main(String[] args) {
        DataSet data = new DataSet(144, 20);
        data.addRow(getData((char) "A".toCharArray()[0]));
        data.addRow(getData((char) "B".toCharArray()[0]));
        data.addRow(getData((char) "C".toCharArray()[0]));
        data.addRow(getData((char) "D".toCharArray()[0]));
        data.addRow(getData((char) "E".toCharArray()[0]));
        data.addRow(getData((char) "F".toCharArray()[0]));
        data.addRow(getData((char) "G".toCharArray()[0]));
        data.addRow(getData((char) "H".toCharArray()[0]));
        data.addRow(getData((char) "I".toCharArray()[0]));
        data.addRow(getData((char) "J".toCharArray()[0]));
        data.addRow(getData((char) "K".toCharArray()[0]));
        data.addRow(getData((char) "L".toCharArray()[0]));
        data.addRow(getData((char) "M".toCharArray()[0]));
        data.addRow(getData((char) "N".toCharArray()[0]));
        data.addRow(getData((char) "O".toCharArray()[0]));
        data.addRow(getData((char) "P".toCharArray()[0]));
        data.addRow(getData((char) "R".toCharArray()[0]));
        data.addRow(getData((char) "S".toCharArray()[0]));
        data.addRow(getData((char) "T".toCharArray()[0]));
        data.addRow(getData((char) "U".toCharArray()[0]));
        BackPropagation backPropagation = new BackPropagation();
        backPropagation.setMaxError(0.001);
        backPropagation.setLearningRate(0.7);


        for(int i=0;i<10;i++) {
            MultiLayerPerceptron multiLayerPerceptron = new MultiLayerPerceptron(TransferFunctionType.SIGMOID, 144, 10, 20);
            multiLayerPerceptron.setLearningRule(backPropagation);
            multiLayerPerceptron.learn(data);
            multiLayerPerceptron.save("my.nnet");

            System.out.println("Ilosc iteracji: " + backPropagation.getCurrentIteration());
        }
        /*
        NeuralNetwork neuralNetwork = NeuralNetwork.createFromFile("my.nnet");

        neuralNetwork.setInput(data.getRows().get(19).getInput());
        System.out.println("Sprawdzam U:");
        neuralNetwork.calculate();
        DecimalFormat df = new DecimalFormat("0.00000000");
        for (double n : neuralNetwork.getOutput())
            System.out.println(df.format(n));
            */

    }



    static DataSetRow getData(char a)
    {
        double in[]=null;
        double out[]=null;
        if(a=="A".toCharArray()[0]){
            in=new double[]{
                        0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,
                        0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,
                        0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,
                        0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,0,0,0,
                        0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,
                        0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,
                        0,1,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,
                        1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0
            };
            out= new double[]{
                        1,0,0,0,0,0,0,0,0,0,
                        0,0,0,0,0,0,0,0,0,0

            };
        }
        else if(a=="B".toCharArray()[0]){
            in= new double[]{
                        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0,0,
                        1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0,0,
                        1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0,0,
                        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0,0,
                        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0,0,
                        1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0,0,
                        1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0,0,
                        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0,0
            };
            out= new double[]{
                    0,1,0,0,0,0,0,0,0,0,
                    0,0,0,0,0,0,0,0,0,0

            };
        }
        else if(a=="C".toCharArray()[0]){
            in=new double[]{
                        0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,
                        0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,0,
                        1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                        1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                        0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,0,
                        0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0
            };
            out= new double[]{
                    0,0,1,0,0,0,0,0,0,0,
                    0,0,0,0,0,0,0,0,0,0

            };
        }
        else if(a=="D".toCharArray()[0]){
            in= new double[]{
                        1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,
                        1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0
            };
            out= new double[]{
                    0,0,0,1,0,0,0,0,0,0,
                    0,0,0,0,0,0,0,0,0,0

            };
        }
        else if(a=="E".toCharArray()[0]){
            in= new double[]{
                        1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                        1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,
                        1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                        1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0
            };
            out= new double[]{
                    0,0,0,0,1,0,0,0,0,0,
                    0,0,0,0,0,0,0,0,0,0

            };
        }
        else if(a=="F".toCharArray()[0]){
            in=new double[]{
                        1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                        1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,
                        1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
            };
            out= new double[]{
                    0,0,0,0,0,1,0,0,0,0,
                    0,0,0,0,0,0,0,0,0,0

            };
        }
        else if(a=="G".toCharArray()[0]){
            in=new double[]{
                        0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,
                        0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,0,
                        1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,
                        1,1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,
                        0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,0,
                        0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0
            };
            out= new double[]{
                    0,0,0,0,0,0,1,0,0,0,
                    0,0,0,0,0,0,0,0,0,0

            };
        }
        else if(a=="H".toCharArray()[0]){
            in=new double[]{
                        1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,
                        1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,
                        1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0
            };
            out= new double[]{
                    0,0,0,0,0,0,0,1,0,0,
                    0,0,0,0,0,0,0,0,0,0

            };
        }
        else if(a=="I".toCharArray()[0]){
            in=new double[]{
                        1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
            };
            out= new double[]{
                    0,0,0,0,0,0,0,0,1,0,
                    0,0,0,0,0,0,0,0,0,0

            };
        }
        else if(a=="J".toCharArray()[0]){
            in=new double[]{
                        0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,
                        0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,
                        0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,
                        0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,
                        0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,
                        0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,
                        1,1,1,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,
                        0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0
            };
            out= new double[]{
                    0,0,0,0,0,0,0,0,0,1,
                    0,0,0,0,0,0,0,0,0,0

            };
        }
        else if(a=="K".toCharArray()[0]){
            in=new double[]{
                1,1,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,
                        1,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,
                        1,1,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,
                        1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,
                        1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,
                        1,1,1,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0
            };
            out=new double[]{
                        0,0,0,0,0,0,0,0,0,0,
                        1,0,0,0,0,0,0,0,0,0

            };
        }
        else if(a=="L".toCharArray()[0]){
            in=new double[]{
                1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                        1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0
            };
            out=new double[]{
                    0,0,0,0,0,0,0,0,0,0,
                    0,1,0,0,0,0,0,0,0,0

            };
        }
        else if(a=="M".toCharArray()[0]){
            in=new double[]{
                1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,
                        1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,0,
                        1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,0,
                        1,1,0,1,1,1,0,0,0,0,0,1,1,1,0,1,1,0,
                        1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,1,1,0,
                        1,1,0,0,0,1,1,1,0,1,1,1,0,0,0,1,1,0,
                        1,1,0,0,0,0,1,1,1,1,1,0,0,0,0,1,1,0,
                        1,1,0,0,0,0,0,1,1,1,0,0,0,0,0,1,1,0
            };
            out=new double[]{
                    0,0,0,0,0,0,0,0,0,0,
                    0,0,1,0,0,0,0,0,0,0

            };
        }
        else if(a=="N".toCharArray()[0]){
            in=new double[]{
                1,1,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,
                        1,1,1,1,1,0,0,0,0,0,1,1,0,0,0,0,0,0,
                        1,1,0,1,1,1,0,0,0,0,1,1,0,0,0,0,0,0,
                        1,1,0,0,1,1,1,0,0,0,1,1,0,0,0,0,0,0,
                        1,1,0,0,0,1,1,1,0,0,1,1,0,0,0,0,0,0,
                        1,1,0,0,0,0,1,1,1,0,1,1,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0
            };
            out=new double[]{
                    0,0,0,0,0,0,0,0,0,0,
                    0,0,0,1,0,0,0,0,0,0

            };
        }
        else if(a=="O".toCharArray()[0]){
            in=new double[]{
                0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,
                        0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,0,
                        1,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,
                        1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,
                        1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,
                        1,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,
                        0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,0,
                        0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0
            };
            out=new double[]{
                    0,0,0,0,0,0,0,0,0,0,
                    0,0,0,0,1,0,0,0,0,0

            };
        }
        else if(a=="P".toCharArray()[0]){
            in=new double[]{
                1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,
                        1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,
                        1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
            };
            out=new double[]{
                    0,0,0,0,0,0,0,0,0,0,
                    0,0,0,0,0,1,0,0,0,0

            };
        }
        else if(a=="R".toCharArray()[0]){
            in=new double[]{
                1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,
                        1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,
                        1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,
                        1,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0
            };
            out=new double[]{
                    0,0,0,0,0,0,0,0,0,0,
                    0,0,0,0,0,0,1,0,0,0

            };
        }
        else if(a=="S".toCharArray()[0]){
            in=new double[]{
                0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,
                        1,1,1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,
                        1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                        1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,
                        0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,
                        0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,
                        1,1,1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,
                        0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0
            };
            out=new double[]{
                    0,0,0,0,0,0,0,0,0,0,
                    0,0,0,0,0,0,0,1,0,0

            };
        }
        else if(a=="T".toCharArray()[0]){
            in=new double[]{
                1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,
                        0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,
                        0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,
                        0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,
                        0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,
                        0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,
                        0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,
                        0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0
            };
            out=new double[]{
                    0,0,0,0,0,0,0,0,0,0,
                    0,0,0,0,0,0,0,0,1,0

            };
        }
        else{
            in=new double[]{
                        1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,
                        1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,
                        1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,
                        0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0
            };
            out=new double[]{
                    0,0,0,0,0,0,0,0,0,0,
                    0,0,0,0,0,0,0,0,0,1

            };
        }



        DataSetRow r=new DataSetRow(in,out);
        return r;

    }
}
